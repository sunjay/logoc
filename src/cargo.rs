use std::io::Write;
use std::collections::HashMap;

use toml;

const CONFIG_MSG: &str = "# THIS FILE IS AUTOGENERATED. ANY CHANGES WILL BE OVERWRITTEN.";

/// Represents the Cargo.toml used to compile the generated Rust code
#[derive(Serialize, Debug)]
pub struct CargoConfig<'a> {
    package: Package<'a>,
    dependencies: HashMap<&'a str, &'a str>,
    bin: Vec<Bin<'a>>,
}

#[derive(Serialize, Debug)]
pub struct Package<'a> {
    name: &'a str,
    version: &'a str,
}

#[derive(Serialize, Debug)]
pub struct Bin<'a> {
    name: &'a str,
    path: &'a str,
}

pub fn write_cargo_toml<W: Write>(mut output: W, name: &str, path: &str) {
    let cfg = CargoConfig {
        package: Package {
            name,
            version: env!("CARGO_PKG_VERSION"),
        },
        dependencies: hashmap! {
            "turtle" => "^1.0.0-alpha.8",
        },
        bin: vec![Bin {
            name,
            path,
        }],
    };

    let text = toml::to_string(&cfg).unwrap();
    write!(output, "{}\n\n{}", CONFIG_MSG, text).unwrap();
}
